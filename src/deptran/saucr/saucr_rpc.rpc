namespace janus;

abstract service Saucr {
    defer Propose(
        uint64_t l_id,
        uint64_t l_epoch,
        LogEntry entry,
        uint64_t saucr_mode |
        bool_t f_ok,
        uint64_t reply_epoch
    );

    defer Commit(
        uint64_t l_id,
        uint64_t l_epoch,
        uint64_t zxid_commit_epoch,
        uint64_t zxid_commit_count,
        uint64_t saucr_mode |
        bool_t f_ok,
        uint64_t reply_epoch
    );

    defer Heartbeat(
        uint64_t l_id,
        uint64_t l_epoch,
        uint64_t saucr_mode |
        bool_t f_ok,
        uint64_t reply_epoch
    );

    defer RequestVote(
        uint64_t c_id,
        uint64_t c_epoch,
        uint64_t last_seen_epoch,
        uint64_t last_seen_cmd_count,
        uint64_t saucr_mode |
        bool_t f_ok,
        bool_t vote_granted,
        uint64_t conflict_epoch,
        uint64_t conflict_cmd_count,
        uint64_t reply_epoch
    );

    defer SyncLogs(
        uint64_t l_id,
        uint64_t l_epoch,
        vector<LogEntry> logs,
        uint64_t saucr_mode |
        bool_t f_ok,
        uint64_t reply_epoch
    );

}

struct LogEntry {
    uint64_t epoch;
    uint64_t cmd_count;
    MarshallDeputy data;
};
